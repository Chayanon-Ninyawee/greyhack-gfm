import_code("/src/utils.src")
import_code("/src/shell.src")

CommandRm = {}
CommandRm.cmd = "rm"
CommandRm.alias = ""
CommandRm.args = "[opt:-r] [file/directory]"
CommandRm.desc = "Remove files or directories"
CommandRm.man = "No manual entry for rm"
CommandRm.usage = "Usage: "+CommandRm.cmd+" "+CommandRm.args

CommandRm.exec = function(args)
    if args.len < 1 then
        GfmShell.println(CommandRm.usage)
        return
    end if

    recursive = false  // `-r`: Delete directory

    fileArgIndex = -1
    for argIndex in range(0, args.len-1)
        arg = args[argIndex]
        if arg[0] == "-" then
            for flag in arg[1:]  // Start at index 1 to skip the '-'
                if flag == "r" then; recursive = true;
                end if
            end for
        else
            if argIndex == args.len-1 then
                fileArgIndex = argIndex
                break
            else
                GfmShell.println(CommandRm.usage)
                return
            end if
        end if
    end for

        
    pathFile = args[fileArgIndex]

    file = resolveFilePath(pathFile, GfmShell.context.currentFolder)
    if file != null then
        if not file.has_permission("w") then
            GfmShell.println("rm: permission denied")
            return
        end if

        output = file.delete()
        if output.len > 0 then GfmShell.println(output)
        return
    end if

    file = resolveFolderPath(pathFile, GfmShell.context.currentFolder)
    if file != null then
        if not recursive then
            GfmShell.println("rm: cannot remove '"+pathFile+"': Is a directory")
            return
        end if

        if not file.has_permission("w") then
            GfmShell.println("rm: permission denied")
            return
        end if

        output = file.delete()
        if output.len > 0 then GfmShell.println(output)
        return
    end if

    GfmShell.println("rm: cannot remove '"+pathFile+"': No such file or directory")
end function