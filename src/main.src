import_code("/src/config.src")

import_code("/src/encryption/AES128.src")
import_code("/src/database.src")
import_code("/src/shell.src")

import_code("/src/commands/help.src")
import_code("/src/commands/man.src")
import_code("/src/commands/exit.src")
import_code("/src/commands/clear.src")
import_code("/src/commands/homeInfo.src")
import_code("/src/commands/ls.src")
import_code("/src/commands/cd.src")
import_code("/src/commands/ps.src")
import_code("/src/commands/kill.src")
import_code("/src/commands/su.src")
import_code("/src/commands/cat.src")
import_code("/src/commands/touch.src")
import_code("/src/commands/mkdir.src")
import_code("/src/commands/rm.src")
import_code("/src/commands/mv.src")


// clear_screen()
// Database.setPassword(user_input("Password: ", true))
// clear_screen()

// // To prevent brute force attack
// // plus it look cool
// print(".", true)
// wait(0.2)
// print("..", true)
// wait(0.2)
// print("...", true)
// wait(0.2)
// print("....", true)
// wait(0.2)
// print(".....", true)
// wait(0.2)

// if AES128_decrypt(Database.getKey, DATABASE_ENCRYPTED_TEST_STRING) != DATABASE_TEST_STRING then
//     clear_screen()
//     exit("Invalid Password!")
// end if

clear_screen()
GfmShell.println("GFM Tools Initialized!")

GfmShell.commandList = [CommandHelp, CommandMan, CommandExit, CommandClear, CommandHomeInfo, CommandLs,
    CommandCd, CommandPs, CommandKill, CommandSu, CommandCat, CommandTouch, CommandMkdir, CommandRm,
    CommandMv]

GfmShell.start()